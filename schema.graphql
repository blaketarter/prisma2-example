### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

scalar DateTime

type Mutation {
  createDraft(content: String, title: String!): Post!
  deletePost(where: PostWhereUniqueInput!): Post
  login(email: String!, password: String!): AuthPayload!
  publish(id: String): Post
  signup(bio: String, email: String!, name: String, password: String!): AuthPayload!
}

type Post {
  author: User!
  authorId: String!
  content: String!
  createdAt: DateTime!
  id: String!
  published: Boolean!
  title: String!
  updatedAt: DateTime!
}

input PostWhereUniqueInput {
  id: String
}

type Profile {
  bio: String!
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type Query {
  feed: [Post!]!
  filterPosts(searchString: String): [Post!]!
  me: User
  post(where: PostWhereUniqueInput!): Post
}

type User {
  createdAt: DateTime!
  email: String!
  id: String!
  name: String
  posts: [Post!]!
  profile: Profile
  updatedAt: DateTime!
}
